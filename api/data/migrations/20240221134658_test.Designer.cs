// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.data;

namespace scriptie.data.migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240221134658_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("api.entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("active")
                        .HasColumnType("TEXT");

                    b.Property<string>("center_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("contributor_id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created")
                        .HasColumnType("TEXT");

                    b.Property<string>("deployed_url")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("paid_till")
                        .HasColumnType("TEXT");

                    b.Property<string>("photoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("user_role")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api.entities.CAS", b =>
                {
                    b.Property<int>("CasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BDR_perc_changed")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LLN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Perc_Predicted")
                        .HasColumnType("TEXT");

                    b.Property<string>("ULN")
                        .HasColumnType("TEXT");

                    b.Property<string>("measured")
                        .HasColumnType("TEXT");

                    b.Property<int?>("patientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("predicted")
                        .HasColumnType("TEXT");

                    b.Property<string>("zscore")
                        .HasColumnType("TEXT");

                    b.HasKey("CasId");

                    b.HasIndex("patientId");

                    b.ToTable("cas");
                });

            modelBuilder.Entity("api.entities.GLI", b =>
                {
                    b.Property<int>("GliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BDR_perc_changed")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LLN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Perc_Predicted")
                        .HasColumnType("TEXT");

                    b.Property<string>("ULN")
                        .HasColumnType("TEXT");

                    b.Property<string>("measured")
                        .HasColumnType("TEXT");

                    b.Property<int?>("patientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("predicted")
                        .HasColumnType("TEXT");

                    b.Property<string>("zscore")
                        .HasColumnType("TEXT");

                    b.HasKey("GliId");

                    b.HasIndex("patientId");

                    b.ToTable("glis");
                });

            modelBuilder.Entity("api.entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("age")
                        .HasColumnType("INTEGER");

                    b.Property<float>("height")
                        .HasColumnType("REAL");

                    b.Property<float>("weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("api.entities.CAS", b =>
                {
                    b.HasOne("api.entities.Patient", "patient")
                        .WithMany()
                        .HasForeignKey("patientId");

                    b.Navigation("patient");
                });

            modelBuilder.Entity("api.entities.GLI", b =>
                {
                    b.HasOne("api.entities.Patient", "patient")
                        .WithMany()
                        .HasForeignKey("patientId");

                    b.Navigation("patient");
                });
#pragma warning restore 612, 618
        }
    }
}
